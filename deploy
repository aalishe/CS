#!/usr/bin/env bash

VERSION='1.0.1'
TITLE='Cloud Scripts Deployment'
PROJECT="CS"
SOURCE_DIR=

#=======================================================================================================
# Author: Johandry Amador <johandry@gmail.com>
# Title:  {title}
#
# Usage: {script_name} <option>
#
# Options:
#     -h, --help          Display this help message. bash {script_name} -h
#     -m '<description>'  Modification short description to be used in the commit
#
# Description: Script to promote changes to production
#
# Report Issues or create Pull Requests in http://github.com/johandry/{project_name}
#=======================================================================================================

source ~/bin/common.sh

DEBUG=1

# If not set, the WORKSPACE Directory is the current directory
WORKSPACE_DIR=.

git_push () {
  branch=$1
  description=$2

  info "Starting to push ${branch} branch"
  git add -A  && \
  git commit -m "${description}" && \
  git push origin ${branch} && \
  ok "Brach ${branch} sucessfully deployed\n" 

  [[ $? -ne 0 ]] && warn "Deployment of brach ${branch} not required or failed"
}

deploy () {
  # TODO: Update version numbers to the scripts modified
  warn "Remember to update the version numbers"
  description=$1

  # Make sure the gh-pages branch exists
  if [[ ! -d "${SCRIPT_DIR}/../Pages" ]]
    then
    # Go to your Workspace directory
    cd "${SCRIPT_DIR}/.."
    git clone -b gh-pages git@github.com:johandry/${PROJECT}.git Pages
  fi

  [[ ! -d "${SCRIPT_DIR}/../${PROJECT}" ]] && error "Incorrect master directory name"

  cd "${SCRIPT_DIR}/.."
  if ! ef "${PROJECT}/install" "Pages/install" || ! ef "${PROJECT}/setup" "Pages/setup"
    then
    cp ${PROJECT}/install Pages/install
    cp ${PROJECT}/setup Pages/setup
    cd Pages
    git_push 'gh-pages' "${description}"
  fi

  cd "${SCRIPT_DIR}"
  git_push 'master' "${description}"
}

[[ "$#" == "0" ]] && usage && exit 0

[[ "$1" == "-m" ]] && description="$2"

[[ -z "${description}" ]] && error "The deployment need a description of the change"

deploy "${description}"
