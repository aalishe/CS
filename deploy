#!/usr/bin/env bash

#=======================================================================================================
# Author: Johandry Amador <johandry@gmail.com>
# Title:  Cloud Scripts Deployment
#
# Usage: {script_name} <option>
#
# Options:
#     -h, --help    Display this help message. bash {script_name} -h
#     -m            Modification short description to be used in the commit
#     -ws           Set the workspace directory. By default is the current directory
#     --setup       Create/Setup the project structure in the workspace directory
#
# Description: Script to promote changes to production
#
# Report Issues or create Pull Requests in http://github.com/johandry/CS
#=======================================================================================================

VERSION='1.0.0'
TITLE='Cloud Scripts Deployment'
GITHUB_PROJECT="CS"

source ~/bin/common.sh

DEBUG=1

# If not set, the WORKSPACE Directory is the current directory
WORKSPACE_DIR=.

setup () {
  [[ -z ${WORKSPACE_DIR} ]] && cd ${WORKSPACE_DIR}
  mkdir CloudScripts && cd $_
  git clone git@github.com:johandry/${GITHUB_PROJECT}.git
  git clone -b gh-pages git@github.com:johandry/CS.git Pages
}

git_push () {
  branch=$1
  description=$2

  info "Starting to push ${branch} branch"
  git add . && \
  git commit -m "${description}" && \
  git push origin ${branch} && \
  ok "Brach ${branch} sucessfully deployed\n" 

  [[ $? -ne 0 ]] && warn "Deployment of brach ${branch} not required or failed"
}

deploy () {
  description=$1

  # Make sure the gh-pages branch exists
  if [[ ! -d "${SCRIPT_DIR}/../Pages" ]]
    then
    # Go to your Workspace directory
    cd "${SCRIPT_DIR}/.."
    git clone -b gh-pages git@github.com:johandry/${GITHUB_PROJECT}.git Pages
  fi

  [[ ! -d "${SCRIPT_DIR}/../${GITHUB_PROJECT}" ]] && error "Incorrect master directory name"

  cd "${SCRIPT_DIR}/.."
  if ! ef "${GITHUB_PROJECT}/install" "Pages/install" || ! ef "${GITHUB_PROJECT}/deploy" "Pages/deploy"
    then
    cp ${GITHUB_PROJECT}/install Pages/install
    cp ${GITHUB_PROJECT}/deploy Pages/deploy
    cd Pages
    git_push 'gh-pages' "${description}"
  fi

  cd "${SCRIPT_DIR}"
  git_push 'master' "${description}"
}

[[ "$#" == "0" ]] && usage && exit 0

action=
description=

while (( $# ))
do
  case $1 in
    -m)
      description=$2
      shift
      action="deploy '${description}'"
    ;;
    --setup)
      action='setup'
    ;;
    -ws)
      WORKSPACE_DIR=$2
      shift
    ;;
  esac
  shift
done

eval "$action"